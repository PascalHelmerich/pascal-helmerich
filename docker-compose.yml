services:
  # Pascal Helmerich API service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: pascal-helmerich-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=pascal_helmerich
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - pascal-network
    restart: unless-stopped

  # PostgreSQL database service
  db:
    image: postgres:15-alpine
    container_name: pascal-helmerich-db
    environment:
      - POSTGRES_DB=pascal_helmerich
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pascal-network
    restart: unless-stopped

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: pascal-helmerich-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../index.html:/usr/share/nginx/html/index.html
      - ../css:/usr/share/nginx/html/css
      - ../pawsonthewire.png:/usr/share/nginx/html/pawsonthewire.png
      - ../portrait.png:/usr/share/nginx/html/portrait.png
    depends_on:
      - api
    networks:
      - pascal-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  pascal-network:
    driver: bridge